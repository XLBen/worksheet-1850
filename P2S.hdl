CHIP P2S {
    IN indata[4], enable, load, reset;
    OUT sout, complete;

    PARTS:
    // 数据存储单元
    Mux(a=st0, b=indata[0], sel=load, out=m0);
    DFF(in=m0, reset=reset, out=st0);
    Mux(a=st1, b=indata[1], sel=load, out=m1);
    DFF(in=m1, reset=reset, out=st1);
    Mux(a=st2, b=indata[2], sel=load, out=m2);
    DFF(in=m2, reset=reset, out=st2);
    Mux(a=st3, b=indata[3], sel=load, out=m3);
    DFF(in=m3, reset=reset, out=st3);

    Not(in=tx, out=ntx);
    And(a=enable, b=ntx, out=start);
    Or(a=start, b=cont, out=txin);
    DFF(in=txin, reset=reset, out=tx);

    Xor(a=c0, b=true, out=next0);
    Mux(a=c0, b=next0, sel=tx, out=mc0);
    DFF(in=mc0, reset=reset, out=c0);

    And(a=c0, b=tx, out=carry_temp);
    Xor(a=c1, b=carry_temp, out=next1);
    Mux(a=c1, b=next1, sel=tx, out=mc1);
    DFF(in=mc1, reset=reset, out=c1);


    And(a=c1, b=c0, out=count3);
    Not(in=count3, out=ncount3);
    And(a=tx, b=ncount3, out=cont);


    And(a=tx, b=c1, c=c0, out=complete);

    Mux(a=st0, b=st1, sel=c0, out=mux0);
    Mux(a=st2, b=st3, sel=c0, out=mux1);
    Mux(a=mux0, b=mux1, sel=c1, out=sout);
}