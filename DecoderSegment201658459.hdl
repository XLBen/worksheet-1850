CHIP DecoderSegment201658459 {
    IN A, B, C, D;
    OUT b;
PARTS:
    Not(in=A, out=NotA);
    Not(in=B, out=NotB);
    Not(in=C, out=NotC);
    Not(in=D, out=NotD);
    And(a=NotA, b=NotB, out=Two0);
    And(a=Two0, b=NotC, out=Two02);
    And(a=Two02, b=NotD, out=And0);
    And(a=NotA, b=NotB, out=Two2);
    And(a=Two2, b=NotC, out=Two22);
    And(a=Two22, b=D, out=And2);
    And(a=NotA, b=B, out=Two6);
    And(a=Two6, b=C, out=Two62);
    And(a=Two62, b=NotD, out=And6);
    And(a=A, b=NotB, out=Two8);
    And(a=Two8, b=NotC, out=Two82);
    And(a=Two82, b=NotD, out=And8);
    And(a=A, b=NotB, out=TwoA);
    And(a=TwoA, b=C, out=TwoA2);
    And(a=TwoA2, b=NotD, out=AndA);
    And(a=A, b=NotB, out=TwoB);
    And(a=TwoB, b=C, out=TwoB2);
    And(a=TwoB2, b=D, out=AndB);
    And(a=A, b=B, out=TwoC);
    And(a=TwoC, b=NotC, out=TwoC2);
    And(a=TwoC2, b=NotD, out=AndC);
    And(a=A, b=B, out=TwoD);
    And(a=TwoD, b=NotC, out=TwoD2);
    And(a=TwoD2, b=D, out=AndD);
    And(a=A, b=B, out=TwoE);
    And(a=TwoE, b=C, out=TwoE2);
    And(a=TwoE2, b=NotD, out=AndE);
    And(a=A, b=B, out=TwoF);
    And(a=TwoF, b=C, out=TwoF2);
    And(a=TwoF2, b=D, out=AndF);
    Or(a=And0, b=And2, out=Or1);
    Or(a=Or1, b=And6, out=Or2);
    Or(a=Or2, b=And8, out=Or3);
    Or(a=Or3, b=AndA, out=Or4);
    Or(a=Or4, b=AndB, out=Or5);
    Or(a=Or5, b=AndC, out=Or6);
    Or(a=Or6, b=AndD, out=Or7);
    Or(a=Or7, b=AndE, out=Or8);
    Or(a=Or8, b=AndF, out=b);
}